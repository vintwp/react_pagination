{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getMaxPageNumber","totalItems","itemsPerPage","Math","ceil","Pagination","pagesQty","total","perPage","currentPage","onPageChange","maxPageNumber","pageNumbers","Array","from","_","index","className","cn","disabled","href","onClick","map","pageNum","active","PER_PAGE_SELECTOR_OPTIONS","items","to","numbers","n","push","getNumbers","App","itemsList","itemsQty","length","useState","page","setPage","setItemsPerPage","firstItemInPage","min","lastItemInPage","itemsToRender","slice","id","defaultValue","onChange","e","target","value","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"gMAUO,SAASA,EACdC,EACAC,GAEA,OAAOC,KAAKC,KAAKH,EAAaC,G,2BCKzB,IAAMG,EAA8B,SAAC,GAKrC,IAZoBC,EAQzBC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAgBX,EAAiBO,EAAOC,GACxCI,GAdmBN,EAcaK,EAb/BE,MAAMC,KACX,IAAID,MAAMP,IACV,SAACS,EAAGC,GAAJ,OAAcA,EAAQ,MAyBxB,OACE,qBAAIC,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CAAEC,SAA0B,IAAhBV,IAHhB,SAME,mBACE,UAAQ,WACRQ,UAAU,YACVG,KAAK,QACL,gBAA+B,IAAhBX,EACfY,QAzBqB,WACvBZ,EAAc,GAChBC,EAAaD,EAAc,IAkBzB,oBAUDG,EAAYU,KAAI,SAAAC,GAAO,OACtB,oBAEEN,UAAWC,IACT,YACA,CAAEM,OAAQf,IAAgBc,IAJ9B,SAOE,mBACE,UAAQ,WACRN,UAAU,YACVG,KAAI,WAAMG,GACVF,QAAS,kBAAMX,EAAaa,IAJ9B,SAMGA,KAZEA,MAgBT,oBACEN,UAAWC,IACT,YACA,CAAEC,SAAUV,IAAgBE,IAHhC,SAME,mBACEM,UAAU,YACV,UAAQ,WACRG,KAAK,QACL,gBAAeX,IAAgBE,EAC/BU,QArDiB,WACnBZ,EAAcE,GAChBD,EAAaD,EAAc,IA8CzB,wBC3EFgB,EAA4B,CAAC,EAAG,EAAG,GAAI,IAGvCC,EFVC,SAAoBZ,EAAca,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIf,EAAMe,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,EEGKG,CAAW,EAAG,IACzBT,KAAI,SAAAO,GAAC,qBAAYA,MAEPG,EAAgB,WAC3B,IAAMC,EAAS,YAAOP,GAEhBQ,EAAWD,EAAUE,OAE3B,EAAwBC,mBAbL,GAanB,mBAAOC,EAAP,KAAaC,EAAb,KAEA,EACIF,mBAfyB,GAc7B,mBAAOlC,EAAP,KAAqBqC,EAArB,KAGM5B,EAAgBX,EAAiBkC,EAAUhC,GAE3CsC,EAAkBrC,KAAKsC,IAC3BJ,EAAOnC,EAAeA,GACrBS,EAAgB,GAAKT,GAElBwC,EAAiBvC,KAAKsC,IAAIJ,EAAOnC,EAAcgC,GAE/CS,EAAgB,YAAIV,GAAWW,MACnCJ,EACAE,GAQF,OACE,sBAAKzB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWoB,EADX,mBAC0BG,EAAkB,EAD5C,cACmDE,EADnD,eACwER,EADxE,OAIA,sBAAKjB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE,UAAQ,kBACR4B,GAAG,kBACH5B,UAAU,eACV6B,aAjDmB,EAkDnBC,SAAU,SAAAC,GAAC,OAnBnBT,GAmB0CS,EAnBnBC,OAAOC,YAC9BZ,EAjCiB,IA8CX,SAOGb,EAA0BH,KAAI,SAAA6B,GAAM,OACnC,wBAEED,MAAOC,EAFT,SAIGA,GAHIA,UASb,uBAAOC,QAAQ,kBAAkBnC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAO2B,EACP1B,QAASN,EACTO,YAAa4B,EACb3B,aAAc4B,IAEhB,6BACGK,EAAcrB,KAAI,SAAA+B,GAAI,OACrB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YChFjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.09073712.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getMaxPageNumber(\n  totalItems: number,\n  itemsPerPage: number,\n): number {\n  return Math.ceil(totalItems / itemsPerPage);\n}\n","import React from 'react';\nimport cn from 'classnames';\n\nimport { getMaxPageNumber } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (p :number) => void;\n};\n\nfunction createPageNumbers(pagesQty: number): number[] {\n  return Array.from(\n    new Array(pagesQty),\n    (_, index) => index + 1,\n  );\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const maxPageNumber = getMaxPageNumber(total, perPage);\n  const pageNumbers = createPageNumbers(maxPageNumber);\n\n  const handlePreviousButton = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextButton = () => {\n    if (currentPage < maxPageNumber) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === 1 },\n        )}\n      >\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePreviousButton}\n        >\n          «\n        </a>\n      </li>\n      {pageNumbers.map(pageNum => (\n        <li\n          key={pageNum}\n          className={cn(\n            'page-item',\n            { active: currentPage === pageNum },\n          )}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${pageNum}`}\n            onClick={() => onPageChange(pageNum)}\n          >\n            {pageNum}\n          </a>\n        </li>\n      ))}\n      <li\n        className={cn(\n          'page-item',\n          { disabled: currentPage === maxPageNumber },\n        )}\n      >\n        <a\n          className=\"page-link\"\n          data-cy=\"nextLink\"\n          href=\"#next\"\n          aria-disabled={currentPage === maxPageNumber}\n          onClick={handleNextButton}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.css';\nimport { getNumbers, getMaxPageNumber } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst PAGE_INITIAL = 1;\nconst ITEMS_PER_PAGE_INITIAL = 5;\nconst PER_PAGE_SELECTOR_OPTIONS = [3, 5, 10, 20];\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const itemsList = [...items]; // get all items from server\n\n  const itemsQty = itemsList.length;\n\n  const [page, setPage] = useState<number>(PAGE_INITIAL);\n\n  const [itemsPerPage, setItemsPerPage]\n    = useState<number>(ITEMS_PER_PAGE_INITIAL);\n\n  const maxPageNumber = getMaxPageNumber(itemsQty, itemsPerPage);\n\n  const firstItemInPage = Math.min(\n    page * itemsPerPage - itemsPerPage,\n    (maxPageNumber - 1) * itemsPerPage,\n  );\n  const lastItemInPage = Math.min(page * itemsPerPage, itemsQty);\n\n  const itemsToRender = [...itemsList].slice(\n    firstItemInPage,\n    lastItemInPage,\n  );\n\n  const handerItemsPerPage = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setItemsPerPage(+event.target.value);\n    setPage(PAGE_INITIAL);\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${page} (items ${firstItemInPage + 1} - ${lastItemInPage} of ${itemsQty})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            defaultValue={ITEMS_PER_PAGE_INITIAL}\n            onChange={e => handerItemsPerPage(e)}\n          >\n            {PER_PAGE_SELECTOR_OPTIONS.map(option => (\n              <option\n                key={option}\n                value={option}\n              >\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={itemsQty}\n        perPage={itemsPerPage}\n        currentPage={page}\n        onPageChange={setPage}\n      />\n      <ul>\n        {itemsToRender.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}